#include "libft.h"
//Эта функция ft_itoa принимает целое число n и возвращает строку, представляющую это число. Если выделение памяти для строки не удалось, функция вернет NULL. Функция умеет корректно обрабатывать отрицательные числа.

// Функция для определения количества цифр в числе
int count_digits(int n) {
    int count = 0;
    if (n <= 0) {
        count = 1; // Добавляем одну цифру для знака минус, если число отрицательное или ноль
    }
    while (n != 0) {
        count++;
        n /= 10;
    }
    return count;
}

// Реализация функции ft_itoa
char *ft_itoa(int n) {
    int num_digits = count_digits(n);
    char *str = (char *)malloc((num_digits + 1) * sizeof(char)); // +1 для знака минус и завершающего нулевого символа
    if (str == NULL) {
        return NULL; // Если выделение памяти не удалось
    }

    // Определяем знак числа и делаем его положительным
    int sign = 1;
    if (n < 0) {
        sign = -1;
        n = -n;
    }

    // Записываем цифры числа в обратном порядке
    int i = 0;
    do {
        str[i++] = '0' + n % 10; // Преобразуем цифру в символ и записываем ее в строку
        n /= 10;
    } while (n > 0);

    // Добавляем знак минус, если число отрицательное
    if (sign == -1) {
        str[i++] = '-';
    }

    // Разворачиваем строку
    for (int j = 0; j < i / 2; j++) {
        char temp = str[j];
        str[j] = str[i - j - 1];
        str[i - j - 1] = temp;
    }

    // Добавляем завершающий нулевой символ
    str[i] = '\0';

    return str;
}
